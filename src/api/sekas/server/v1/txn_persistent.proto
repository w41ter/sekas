// Copyright 2023-present The Sekas Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package sekas.server.v1;

//! This file describes data structures which needs to be saved to disk store.

/// The state of txn records.
enum TxnState {
    RUNNING = 0;
    ABORTED = 1;
    COMMITTED = 2;
}

/// The txn record.
message TxnRecord {
    /// The state of txn record, the valid conversation is:
    ///
    /// RUNNING ------> ABORTED
    ///           +---> COMMITTED
    TxnState state = 1;
    /// The heartbeat of txn.
    uint64 heartbeat = 2;
    /// The time-to-live of txn.
    uint64 ttl = 3;
    /// The commit version of txn, it only used when state is equals to COMMITTED.
    optional uint64 commit_version = 4;
}

/// The intent created by txn prepare request.
message TxnIntent {
    /// The start version of txn.
    uint64 start_version = 1;
    bool is_delete = 2;
    /// The value to apply to state machine. `None` for Nop.
    optional bytes value = 3;
}


